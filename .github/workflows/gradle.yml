name: CI/CD Dockereploy

on:
  push:
    branches: [ main ]

permissions:
  contents: read

# 환경설정
env:
  DOCKER_IMAGE: ghcr.io/${{ github.actor }}/arto-fe-deploy
  VERSION: ${{ github.sha }}
  NAME: go_cicd


jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. 코드 체크아웃
      - name: Checkout
        uses: actions/checkout@v3

      # 2. JDK 17 설정
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '17'

      # 3. application.yml 생성
      - name: Make application.yml
        run: |
          mkdir -p ./src/main/resources
          echo "${{ secrets.APPLICATION_YML }}" > ./src/main/resources/application.yml
        shell: bash

      # 4. Gradle 빌드
      - name: Build with Gradle
        run: |
          chmod +x ./gradlew
          ./gradlew clean build -x test

      - name: Login to GHCR
        uses: docker/login-action@v3 # v1 대신 v3 사용 권장
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_TOKEN }}

      # 📦 2. Docker Build 및 Push (쉘 스크립트 사용)
      - name: Docker Build & Push
        run: |
          # 1. Docker 이미지 빌드
          # env.DOCKER_IMAGE는 'ghcr.io/user/repo' 주소여야 합니다.
          docker build -t ${{ env.DOCKER_IMAGE }}:latest .
          
          # 2. GHCR에 이미지 푸시
          docker push ${{ env.DOCKER_IMAGE }}:latest
          
          # 3. 로컬 이미지 정리
          # sudo 명령어 대신 docker 명령 자체로 정리 (runner 권한에 따라 sudo가 필요할 수도 있음)
          docker image prune -f 
